// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// add_rcpp
NumericVector add_rcpp(NumericVector x, NumericVector y);
RcppExport SEXP _simplercpp_add_rcpp(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(add_rcpp(x, y));
    return rcpp_result_gen;
END_RCPP
}
// mul_rcpp
NumericVector mul_rcpp(NumericVector x, NumericVector y);
RcppExport SEXP _simplercpp_mul_rcpp(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(mul_rcpp(x, y));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_simplercpp_add_rcpp", (DL_FUNC) &_simplercpp_add_rcpp, 2},
    {"_simplercpp_mul_rcpp", (DL_FUNC) &_simplercpp_mul_rcpp, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_simplercpp(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
